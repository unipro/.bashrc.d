# ~/.bashrc.d/init: executed by .bashrc

# Add the next three lines to the end of .bashrc
# if [ -f ~/.bashrc.d/init ]; then
#     . ~/.bashrc.d/init
# fi

export ALTERNATE_EDITOR=""
export EDITOR="emacsclient -t"                  # $EDITOR opens in terminal
export VISUAL="emacsclient -c -a emacs"         # $VISUAL opens in GUI mode

add_bin_path () {
    local path="$1"
    if [ -d "$path" ]; then
        if [ -z "$PATH" ]; then
            export PATH="$path"
        else
            case ":${PATH}:" in
                *:"$path":*)
                    ;;
                *)
                    export PATH="$path:$PATH"
                    ;;
            esac
        fi
    fi
}

add_man_path () {
    local path="$1"
    if [ -d "$path" ]; then
        if [ -z "$MANPATH" ]; then
            export MANPATH="$path:$(manpath)"
        else
            case ":${MANPATH}:" in
                *:"$path":*)
                    ;;
                *)
                    export MANPATH="$path:$MANPATH"
                    ;;
            esac
        fi
    fi
}

add_pkg_config_path () {
    local path="$1"
    if [ -d "$path" ]; then
        if [ -z "$PKG_CONFIG_PATH" ]; then
            export PKG_CONFIG_PATH="$path"
        else
            case ":${PKG_CONFIG_PATH}:" in
                *:"$path":*)
                    ;;
                *)
                    export PKG_CONFIG_PATH="$path:$PKG_CONFIG_PATH"
                    ;;
            esac
        fi
    fi
}

case "$OSTYPE" in
    linux-gnu*)
        ;;
    darwin*)
        add_pkg_config_path "/usr/local/opt/readline/lib/pkgconfig"

        add_bin_path "/usr/local/opt/icu4c/bin"
        add_bin_path "/usr/local/opt/icu4c/sbin"
        add_pkg_config_path "/usr/local/opt/icu4c/lib/pkgconfig"

        add_bin_path "/usr/local/opt/openssl/bin"
        add_pkg_config_path "/usr/local/opt/openssl/lib/pkgconfig"

        add_pkg_config_path "/usr/local/opt/libffi/lib/pkgconfig"

        add_bin_path "/usr/local/opt/sqlite/bin"
        add_pkg_config_path "/usr/local/opt/sqlite/lib/pkgconfig"

        add_bin_path "/usr/local/opt/qt/bin"
        add_pkg_config_path "/usr/local/opt/qt/lib/pkgconfig"

        # nodejs
        add_bin_path "/usr/local/opt/node@14/bin"

        # guile 3.0
        if [ -d /usr/local/share/guile/site/3.0 ]; then
            export GUILE_LOAD_PATH="/usr/local/share/guile/site/3.0"
            export GUILE_LOAD_COMPILED_PATH="/usr/local/lib/guile/3.0/site-ccache"
            export GUILE_SYSTEM_EXTENSIONS_PATH="/usr/local/lib/guile/3.0/extensions"
        fi

        if [ -f /usr/local/bin/guile ]; then
            export GUILE_TLS_CERTIFICATE_DIRECTORY=/usr/local/etc/gnutls/
        fi

        # docbook
        if [ -f "/usr/local/etc/xml/catalog" ]; then
            export XML_CATALOG_FILES="/usr/local/etc/xml/catalog"
        fi

        # Java
        JAVA_HOME=$(/usr/libexec/java_home)
        export JAVA_HOME

        # if you need to have gnu-getopt
        # add_pkg_path "/usr/local/opt/gnu-getopt/bin"
        ;;
    *)
        ;;
esac

# rust
if [ -d $HOME/.cargo/bin ]; then
    add_bin_path "$HOME/.cargo/bin"
    # export RUST_SRC_PATH="$(rustc --print sysroot)/lib/rustlib/src/rust/src"
    export RUST_SRC_PATH="$HOME/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/src"
fi

# go
export GOPATH=${HOME}/go
add_bin_path "$GOPATH/bin"

# node
if [ -d ${HOME}/.npm-packages ]; then
    export NPM_PACKAGES=${HOME}/.npm-packages
    export NODE_PATH="$NPM_PACKAGES/lib/node_modules:$NODE_PATH"

    add_bin_path "$NPM_PACKAGES/bin"
    add_man_path "$NPM_PACKAGES/share/man"
fi

# php
add_bin_path "${HOME}/.composer/vendor/bin"

# python
if command -v pyenv > /dev/null; then
    export PYENV_ROOT="$HOME/.pyenv"
    export PATH="$PYENV_ROOT/bin:$PATH"
    eval "$(pyenv init -)"
fi

# emacs
add_bin_path "$HOME/.emacs.d/bin"

# enable programmable completion features
if ! shopt -oq posix; then
    if [ -f /etc/profile.d/bash_completion.sh ]; then
        . /etc/profile.d/bash_completion.sh
    elif [ -f /usr/local/etc/profile.d/bash_completion.sh ]; then
        . /usr/local/etc/profile.d/bash_completion.sh
    elif [ -f ~/.bash_completion ]; then
        . ~/.bash_completion
    elif [ -f ~/.bashrc.d/completion ]; then
        . ~/.bashrc.d/completion
    fi
fi

# alias definitions
if [ -f ~/.bashrc.d/aliases ]; then
    . ~/.bashrc.d/aliases
fi

# private definitions
if [ -f ~/.bashrc.d/private ]; then
    . ~/.bashrc.d/private
fi

# direnv
eval "$(direnv hook bash)"

# Local Variables:
# mode: shell-script
# End:
