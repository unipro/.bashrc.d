# ~/.bashrc.d/init: executed by .bashrc

add_bin_path () {
    local path="$1"
    if [ -d "$path" ]; then
        if [ -z "$PATH" ]; then
            export PATH="$path"
        else
            case ":${PATH}:" in
                *:"$path":*)
                    ;;
                *)
                    export PATH="$path:$PATH"
                    ;;
            esac
        fi
    fi
}

add_man_path () {
    local path="$1"
    if [ -d "$path" ]; then
        if [ -z "$MANPATH" ]; then
            MANPATH="$path:$(manpath)"
            export MANPATH
        else
            case ":${MANPATH}:" in
                *:"$path":*)
                    ;;
                *)
                    export MANPATH="$path:$MANPATH"
                    ;;
            esac
        fi
    fi
}

add_pkg_config_path () {
    local path="$1"
    if [ -d "$path" ]; then
        if [ -z "$PKG_CONFIG_PATH" ]; then
            export PKG_CONFIG_PATH="$path"
        else
            case ":${PKG_CONFIG_PATH}:" in
                *:"$path":*)
                    ;;
                *)
                    export PKG_CONFIG_PATH="$path:$PKG_CONFIG_PATH"
                    ;;
            esac
        fi
    fi
}

if [ "${OSTYPE:0:6}" == "darwin" ]; then
    BREW_PREFIX="$(brew --prefix)"

    # add_bin_path "$BREW_PREFIX/opt/coreutils/libexec/gnubin"

    add_pkg_config_path "$BREW_PREFIX/opt/readline/lib/pkgconfig"

    add_pkg_config_path "$BREW_PREFIX/opt/zlib/lib/pkgconfig"

    add_bin_path "$BREW_PREFIX/opt/bzip2/bin"
    add_pkg_config_path "$BREW_PREFIX/opt/bzip2/lib/pkgconfig"

    add_bin_path "$BREW_PREFIX/opt/ncurses/bin"
    add_pkg_config_path "$BREW_PREFIX/opt/ncurses/lib/pkgconfig"

    add_bin_path "$BREW_PREFIX/opt/icu4c/bin"
    add_bin_path "$BREW_PREFIX/opt/icu4c/sbin"
    add_pkg_config_path "$BREW_PREFIX/opt/icu4c/lib/pkgconfig"

    # add_bin_path "$BREW_PREFIX/opt/openssl@1.1/bin"
    # add_pkg_config_path "$BREW_PREFIX/opt/openssl@1.1/lib/pkgconfig"
    add_bin_path "$BREW_PREFIX/opt/openssl@3/bin"
    add_pkg_config_path "$BREW_PREFIX/opt/openssl@3/lib/pkgconfig"

    add_bin_path "$BREW_PREFIX/opt/curl/bin"
    add_pkg_config_path "$BREW_PREFIX/opt/curl/lib/pkgconfig"

    add_pkg_config_path "$BREW_PREFIX/opt/libffi/lib/pkgconfig"

    add_bin_path "$BREW_PREFIX/opt/sqlite/bin"
    add_pkg_config_path "$BREW_PREFIX/opt/sqlite/lib/pkgconfig"

    add_bin_path "$BREW_PREFIX/opt/qt/bin"
    add_pkg_config_path "$BREW_PREFIX/opt/qt/lib/pkgconfig"

    add_bin_path "$BREW_PREFIX/opt/jpeg/bin"
    add_pkg_config_path "$BREW_PREFIX/opt/jpeg/lib/pkgconfig"

    add_bin_path "$BREW_PREFIX/opt/man-db/libexec/bin"

    # llvm
    add_bin_path "$BREW_PREFIX/opt/llvm/bin"

    # python
    add_bin_path "${HOME}/Library/Python/3.9/bin"

    # nodejs
    add_bin_path "$BREW_PREFIX/opt/node@18/bin"
    # shellcheck source=/dev/null
    [ -s "$BREW_PREFIX/opt/nvm/nvm.sh" ] && . "$BREW_PREFIX/opt/nvm/nvm.sh"
    # shellcheck source=/dev/null
    [ -s "$BREW_PREFIX/opt/nvm/etc/bash_completion.d/nvm" ] && . "$BREW_PREFIX/opt/nvm/etc/bash_completion.d/nvm"

    # ruby
    add_bin_path "$BREW_PREFIX/opt/ruby/bin"
    add_pkg_config_path "$BREW_PREFIX/opt/ruby/lib/pkgconfig"

    # guile 3.0
    if [ -d "$BREW_PREFIX/share/guile/site/3.0" ]; then
        GUILE_LOAD_PATH="$BREW_PREFIX/share/guile/site/3.0"
        GUILE_LOAD_COMPILED_PATH="$BREW_PREFIX/lib/guile/3.0/site-ccache"
        GUILE_SYSTEM_EXTENSIONS_PATH="$BREW_PREFIX/lib/guile/3.0/extensions"
        export GUILE_LOAD_PATH GUILE_LOAD_COMPILED_PATH GUILE_SYSTEM_EXTENSIONS_PATH
    fi

    if [ -f "$BREW_PREFIX/bin/guile" ]; then
        GUILE_TLS_CERTIFICATE_DIRECTORY="$BREW_PREFIX/etc/gnutls/"
        export GUILE_TLS_CERTIFICATE_DIRECTORY
    fi

    # docbook
    if [ -f "$BREW_PREFIX/etc/xml/catalog" ]; then
        XML_CATALOG_FILES="$BREW_PREFIX/etc/xml/catalog"
        export XML_CATALOG_FILES
    fi

    # Java
    JAVA_HOME="$(/usr/libexec/java_home)"
    export JAVA_HOME

    # mysql@8.4
    add_bin_path "$BREW_PREFIX/opt/mysql@8.4/bin"
    add_pkg_config_path "$BREW_PREFIX/opt/mysql@8.4/lib/pkgconfig"

    # mysql-client@8.4
    add_bin_path "$BREW_PREFIX/opt/mysql-client@8.4/bin"
    add_pkg_config_path "$BREW_PREFIX/opt/mysql-client@8.4/lib/pkgconfig"

    # if you need to have gnu-getopt
    # add_pkg_path "$BREW_PREFIX/opt/gnu-getopt/bin"

    # protobuf@21
    # add_bin_path "$BREW_PREFIX/opt/protobuf@21/bin"
    # add_pkg_config_path "$BREW_PREFIX/opt/protobuf@21/lib/pkgconfig"

    # ffmpeg@4
    # add_bin_path "$BREW_PREFIX/opt/ffmpeg@4/bin"
    # add_pkg_config_path "$BREW_PREFIX/opt/ffmpeg@4/lib/pkgconfig"

    # ffmpeg@5
    # add_bin_path "$BREW_PREFIX/opt/ffmpeg@5/bin"
    # add_pkg_config_path "$BREW_PREFIX/opt/ffmpeg@5/lib/pkgconfig"
fi

# set PATH so it includes user's private bin if it exists
if [ -d "$HOME/bin" ] ; then
    add_bin_path "$HOME/bin"
fi

# set PATH so it includes user's private bin if it exists
if [ -d "$HOME/.local/bin" ] ; then
    add_bin_path "$HOME/.local/bin"
fi

# rust
if [ -d "$HOME/.cargo/bin" ]; then
    add_bin_path "$HOME/.cargo/bin"
    if command -v rustc &> /dev/null; then
        RUST_SRC_PATH="$(rustc --print sysroot)/lib/rustlib/src/rust/src"
        export RUST_SRC_PATH
    fi
fi

# go
export GOPATH="${HOME}/go"
add_bin_path "$GOPATH/bin"

# node
add_bin_path "$HOME/node_modules/.bin"
if [ -d "$HOME/.nvm" ]; then
    export NVM_DIR="$HOME/.nvm"
fi
if [ -d "${HOME}/.npm-packages" ]; then
    export NPM_PACKAGES="${HOME}/.npm-packages"
    export NODE_PATH="$NPM_PACKAGES/lib/node_modules:$NODE_PATH"

    add_bin_path "$NPM_PACKAGES/bin"
    add_man_path "$NPM_PACKAGES/share/man"
fi

# php
add_bin_path "${HOME}/.composer/vendor/bin"

# python
add_bin_path "${HOME}/.pyenv/bin"

# emacs
add_bin_path "$HOME/.emacs.d/bin"
add_bin_path "$HOME/.config/emacs/bin"

# All gst-* GStreamer plugins are now bundled in this formula.
# For GStreamer to find your own plugins, add their paths to `GST_PLUGIN_PATH`.
if [ -d "$HOME/.local/lib/gstreamer-1.0" ];then
    export GST_PLUGIN_PATH="$HOME/.local/lib/gstreamer-1.0"
fi

# pyenv
if command -v pyenv &> /dev/null; then
    eval "$(pyenv init --path)"
fi

{
    echo "export PATH=\"$PATH\""
    echo "export PKG_CONFIG_PATH=\"$PKG_CONFIG_PATH\""
    echo "export RUST_SRC_PATH=\"$RUST_SRC_PATH\""
    echo "export JAVA_HOME=\"$JAVA_HOME\""
    echo "export XML_CATALOG_FILES=\"$XML_CATALOG_FILES\""
    echo "export GUILE_LOAD_PATH=\"$GUILE_LOAD_PATH\""
    echo "export GUILE_SYSTEM_EXTENSIONS_PATH=\"$GUILE_SYSTEM_EXTENSIONS_PATH\""
    echo "export GUILE_LOAD_COMPILED_PATH=\"$GUILE_LOAD_COMPILED_PATH\""
    echo "export GUILE_TLS_CERTIFICATE_DIRECTORY=\"$GUILE_TLS_CERTIFICATE_DIRECTORY\""
    echo "export GOPATH=\"$GOPATH\""
    echo "export NVM_DIR=\"$NVM_DIR\""
    echo "export GST_PLUGIN_PATH=\"$GST_PLUGIN_PATH\""
} > "$HOME/.bashrc.d/env"

# pyenv
if command -v pyenv &> /dev/null; then
    pyenv virtualenv-init - >> "$HOME/.bashrc.d/env"
fi

# direnv
if command -v direnv &> /dev/null; then
    direnv hook bash >> "$HOME/.bashrc.d/env"
fi

# Local Variables:
# mode: shell-script
# End:
